// Code generated by protoc-gen-go.
// source: jobs/jobs.proto
// DO NOT EDIT!

/*
Package jobs is a generated protocol buffer package.

It is generated from these files:
	jobs/jobs.proto

It has these top-level messages:
	CreateJobRequest
	Job
	Jobs
	UpdateStatusRequest
	Empty
*/
package jobs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateJobRequest struct {
	Path   string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Alias  string `protobuf:"bytes,3,opt,name=alias" json:"alias,omitempty"`
}

func (m *CreateJobRequest) Reset()                    { *m = CreateJobRequest{} }
func (m *CreateJobRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateJobRequest) ProtoMessage()               {}
func (*CreateJobRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Job struct {
	Id     int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Path   string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Status string `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	Alias  string `protobuf:"bytes,4,opt,name=alias" json:"alias,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Jobs struct {
	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs" json:"jobs,omitempty"`
}

func (m *Jobs) Reset()                    { *m = Jobs{} }
func (m *Jobs) String() string            { return proto.CompactTextString(m) }
func (*Jobs) ProtoMessage()               {}
func (*Jobs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Jobs) GetJobs() []*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

type UpdateStatusRequest struct {
	Path   string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *UpdateStatusRequest) Reset()                    { *m = UpdateStatusRequest{} }
func (m *UpdateStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateStatusRequest) ProtoMessage()               {}
func (*UpdateStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*CreateJobRequest)(nil), "jobs.CreateJobRequest")
	proto.RegisterType((*Job)(nil), "jobs.Job")
	proto.RegisterType((*Jobs)(nil), "jobs.Jobs")
	proto.RegisterType((*UpdateStatusRequest)(nil), "jobs.UpdateStatusRequest")
	proto.RegisterType((*Empty)(nil), "jobs.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for JobsApi service

type JobsApiClient interface {
	CreateJob(ctx context.Context, in *CreateJobRequest, opts ...grpc.CallOption) (*Job, error)
	GetAllJobs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Jobs, error)
	UpdateJobStatus(ctx context.Context, in *UpdateStatusRequest, opts ...grpc.CallOption) (*Empty, error)
}

type jobsApiClient struct {
	cc *grpc.ClientConn
}

func NewJobsApiClient(cc *grpc.ClientConn) JobsApiClient {
	return &jobsApiClient{cc}
}

func (c *jobsApiClient) CreateJob(ctx context.Context, in *CreateJobRequest, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := grpc.Invoke(ctx, "/jobs.JobsApi/CreateJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsApiClient) GetAllJobs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Jobs, error) {
	out := new(Jobs)
	err := grpc.Invoke(ctx, "/jobs.JobsApi/GetAllJobs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsApiClient) UpdateJobStatus(ctx context.Context, in *UpdateStatusRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/jobs.JobsApi/UpdateJobStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for JobsApi service

type JobsApiServer interface {
	CreateJob(context.Context, *CreateJobRequest) (*Job, error)
	GetAllJobs(context.Context, *Empty) (*Jobs, error)
	UpdateJobStatus(context.Context, *UpdateStatusRequest) (*Empty, error)
}

func RegisterJobsApiServer(s *grpc.Server, srv JobsApiServer) {
	s.RegisterService(&_JobsApi_serviceDesc, srv)
}

func _JobsApi_CreateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsApiServer).CreateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jobs.JobsApi/CreateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsApiServer).CreateJob(ctx, req.(*CreateJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobsApi_GetAllJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsApiServer).GetAllJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jobs.JobsApi/GetAllJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsApiServer).GetAllJobs(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobsApi_UpdateJobStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsApiServer).UpdateJobStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jobs.JobsApi/UpdateJobStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsApiServer).UpdateJobStatus(ctx, req.(*UpdateStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobsApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jobs.JobsApi",
	HandlerType: (*JobsApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateJob",
			Handler:    _JobsApi_CreateJob_Handler,
		},
		{
			MethodName: "GetAllJobs",
			Handler:    _JobsApi_GetAllJobs_Handler,
		},
		{
			MethodName: "UpdateJobStatus",
			Handler:    _JobsApi_UpdateJobStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("jobs/jobs.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x92, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0x87, 0xc9, 0x9f, 0xb6, 0x76, 0x8a, 0xb6, 0x4c, 0xa5, 0xd4, 0xa0, 0x20, 0x0b, 0x42, 0xf1,
	0xd0, 0x60, 0x3d, 0x08, 0xde, 0x4a, 0x11, 0xc1, 0x83, 0x87, 0xaa, 0x78, 0xde, 0xd0, 0xa5, 0x46,
	0x62, 0x76, 0xed, 0x6e, 0x05, 0xaf, 0xbe, 0x82, 0x8f, 0xe6, 0xc1, 0x17, 0xf0, 0x41, 0xdc, 0xcc,
	0xd6, 0x18, 0x24, 0x27, 0x2f, 0x61, 0x77, 0xb2, 0xbf, 0x6f, 0xe6, 0xdb, 0x04, 0xba, 0x8f, 0x32,
	0xd1, 0x71, 0xf1, 0x18, 0xab, 0x95, 0x34, 0x12, 0xc3, 0x62, 0x1d, 0xed, 0x2f, 0xa5, 0x5c, 0x66,
	0x22, 0xe6, 0x2a, 0x8d, 0x79, 0x9e, 0x4b, 0xc3, 0x4d, 0x2a, 0xf3, 0xcd, 0x19, 0x76, 0x0b, 0xbd,
	0xd9, 0x4a, 0x70, 0x23, 0xae, 0x64, 0x32, 0x17, 0xcf, 0x6b, 0xa1, 0x0d, 0x22, 0x84, 0x8a, 0x9b,
	0x87, 0xa1, 0x77, 0xe8, 0x8d, 0xda, 0x73, 0x5a, 0xe3, 0x00, 0x9a, 0xda, 0x26, 0xd7, 0x7a, 0xe8,
	0x53, 0x75, 0xb3, 0xc3, 0x5d, 0x68, 0xf0, 0x2c, 0xe5, 0x7a, 0x18, 0x50, 0xd9, 0x6d, 0xd8, 0x3d,
	0x04, 0x96, 0x87, 0x3b, 0xe0, 0xa7, 0x0b, 0xc2, 0x34, 0xe6, 0x76, 0x55, 0x82, 0xfd, 0x5a, 0x70,
	0x50, 0x0f, 0x0e, 0xab, 0xe0, 0x23, 0x08, 0x2d, 0x58, 0xe3, 0x01, 0x90, 0x9c, 0x65, 0x07, 0xa3,
	0xce, 0xa4, 0x3d, 0x26, 0xeb, 0x42, 0x81, 0xca, 0x6c, 0x0a, 0xfd, 0x3b, 0xb5, 0xb0, 0x56, 0x37,
	0x04, 0xfb, 0x87, 0x18, 0x6b, 0x41, 0xe3, 0xe2, 0x49, 0x99, 0xd7, 0xc9, 0xa7, 0x07, 0xad, 0xa2,
	0xe7, 0x54, 0xa5, 0x38, 0x83, 0x76, 0x79, 0x5b, 0x38, 0x70, 0x5d, 0xff, 0x5e, 0x5f, 0xf4, 0x3b,
	0x0d, 0xeb, 0xbf, 0x7d, 0x7c, 0xbd, 0xfb, 0xdb, 0x6c, 0x2b, 0x7e, 0x39, 0xa1, 0x2f, 0x73, 0xee,
	0x1d, 0xe3, 0x19, 0xc0, 0xa5, 0x30, 0xd3, 0x2c, 0x23, 0x93, 0x8e, 0x3b, 0x4d, 0xbd, 0x22, 0x28,
	0xa3, 0x9a, 0xf5, 0x28, 0x0b, 0x58, 0x66, 0xf1, 0x1a, 0xba, 0xce, 0xca, 0xbe, 0x77, 0x62, 0xb8,
	0xe7, 0x02, 0x35, 0xb2, 0x51, 0x15, 0xfc, 0x33, 0x48, 0x54, 0x1d, 0x24, 0x69, 0xd2, 0x2f, 0x70,
	0xfa, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xb5, 0xc3, 0x83, 0x39, 0x02, 0x00, 0x00,
}
